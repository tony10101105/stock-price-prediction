文本模型A:
利用Bert求出N個新聞的句向量(N*1024)，並各乘以一個時間衰減項，然後喂進CNN提取特徵，輸出單一數值，即隔日股價。
序列模型B:
利用GRU，輸入時間序列，輸出單一值，即隔日股價
整合模型C：
A與B的輸出作為輸入，進入第三個小網路，以尋找兩者關係。輸出的值為最終預測股價。
約束（loss)：
1.C之輸出與真實股價之差異（以更新整個系統）。
2.A與B之輸出的差異（以更新A與B）。

重點小記：
1.
在股票預測的問題中，二元預測（即上升或下跌）可能不是最好的選擇。首先，二元預測的輸出會是和為一的兩個機率，模型會選擇較大的那個機率為最終輸出，但「必然下跌(p_low ~ 0.99)」與「極小機率下跌(p_low ~ 0.51)」不能肯定可以代表「下跌100點」與「下跌1點」的真實情況與其差距，而這是極其可惜的，因為若模型能以直接對應真實數字的方式進行訓練，情理上訓練效果會比較好，股票預測的領域恰巧就有這個優勢，但使用二元預測就會將其消弭掉。的確，直接用二元預測會是一個很簡單方便的手段，但回歸預測也絕對可以進行「上升或下降」的預測（這個應該很顯然）。總的而言，回歸預測的功能性、解釋性與訓練可行性都會高於二元預測，因此本研究推薦使用回歸預測，這應該才是股票預測模型的可能最佳選擇。

2.
股票預測有兩個大方向，一是利用歷史股價（時間序列），二是利用財經新聞（自然語言處理），但其實單靠這兩者是沒辦法精準預測的。時間序列可以處理不同產業的股票大大小小的週期性特徵（如淡旺季），但無法對不斷改變、突然地國際情勢、世界經濟或產業政策進行回應；財經新聞則相反，會忽略掉週期性因素，因此若要真正準確地預測股價，我們必然需要將這兩者結合起來。

有研究直接將這兩種數據串接起來給NN訓練，但這兩種資料本質上不同，我們也不期望單一神經網路對這兩種截然不同的資料作出回應，應該設立兩個模型，分別預測兩種資料。再來，關鍵的是，兩種模型的輸出必須再經過一個小型整合網路才行，這也是本研究其中一個特別的地方。因為既然我們已經知道這兩種網路的輸出本就不該完全等於真實股價，直接以真實股價作為target去進行回歸預測事顯然不合理的，且也無法整合這兩種資料。模型的意義在於，假設 真實股價 = 係數1 * 序列模型股價 + 係數2 * 文本模型股價，即這兩種股價都對於真實股價有某種貢獻，那麼應當可以透過簡單的神經網路去求取該參數組合。至於兩種模型股價的約束，是因為我們假定這兩種模型應當有的正確數值（但我們無從得知）不會差距過大，因此需要設定一個超參數alpha，當兩者差距過大時就會施以逞罰，即損失函數。

3.要注意股價的normalization

4.numerical data: Jan 01, 2010 - Jan 01, 2020

5.Bert有attention機制